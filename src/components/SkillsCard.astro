---
export interface Props {
  skill: {
    id: string;
    title: string;
    icon: string;
    skills: string[];
    color: string;
  };
  index: number;
}

const { skill, index } = Astro.props;

// Generar un n√∫mero aleatorio entre -5 y 5
const rotate = (Math.random() * 10 - 5).toFixed(2); // Ej: -3.42, 4.12, etc.
---

<div class="" style={`transform: rotate(${rotate}deg);`}>
  <div class="relative p-6 h-full flex flex-col">
    <!-- Header -->
    <div class="text-center mb-2">
      <div class={`flex items-center gap-2 justify-center mb-4`}>
        <span class="text-2xl">{skill.icon}</span>
        <h3
          class={`text-xl font-bold text-light-primary  transition-colors duration-300`}
        >
          {skill.title}
        </h3>
      </div>
    </div>

    <!-- Skills grid -->
    <div class="flex-1">
      <div class="flex flex-wrap gap-3">
        {
          skill.skills.map((skillName) => (
            <div class="px-3 py-1 text-light-white bg-light-accent drop-shadow-lg text-sm">
              <div class="relative flex items-center gap-3 justify-center">
                <span class={`text-sm font-medium`}>{skillName}</span>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </div>
</div>

<style>
  .group:hover {
    border-color: var(--hover-border);
  }

  @keyframes slideInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .group/skill {
    animation: slideInUp 0.5s ease-out forwards;
    opacity: 0;
  }

  .group:hover .group/skill {
    animation-play-state: running;
  }

  @media (prefers-reduced-motion: reduce) {
    .group/skill {
      animation: none;
      opacity: 1;
    }
  }
</style>
